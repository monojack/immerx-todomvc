{"version":3,"sources":["webpack:///./src/common/isEnterKey.js","webpack:///./src/components/Header.js","webpack:///./src/components/Todo.js","webpack:///./src/common/isEscapeKey.js","webpack:///./src/constants/index.js","webpack:///./src/hooks/useHash.js","webpack:///./src/components/ListFooter.js","webpack:///./src/components/TodoList.js","webpack:///./src/components/Footer.js","webpack:///./src/components/App.js","webpack:///./src/index.js"],"names":["isEnterKey","key","keyCode","which","Header","update","useImmerx","useState","value","setValue","className","placeholder","onChange","onKeyUp","e","draft","_id","uuid","label","completed","Todo","id","lens","useMemo","get","state","t","set","idx","childState","Object","todo","editable","setEditable","inputRef","useRef","useEffect","data-id","type","checked","onDoubleClick","onClick","ref","onBlur","isEscapeKey","HASHES","getHash","w","hash$","listeners","subscribe","this","unsubscribe","next","listener","useHash","hash","setHash","sub","ListFooter","remaining","onClearCompleted","href","window","filters","TodoList","todos","produce","visibleTodos","length","htmlFor","i","Footer","App","devToolsMiddleware","createDevToolsMiddleware","inline","document","create","render"],"mappings":"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","file":"app.beee702f1dc6d0131909.js","sourcesContent":["export function isEnterKey({ key, keyCode, which }) {\n  return key === 'Enter' || keyCode === 13 || which === 13\n}\n","import React, { useState } from 'react'\nimport { useImmerx } from '@immerx/react'\nimport { v4 as uuid } from 'uuid'\nimport { isEnterKey } from '../common/isEnterKey'\n\nexport function Header() {\n  const [, update] = useImmerx()\n  const [value, setValue] = useState('')\n\n  function onSubmit() {\n    update(\n      draft =>\n        void draft.todos.push({\n          _id: uuid(),\n          label: value,\n          completed: false,\n        }),\n    )\n    setValue('')\n  }\n\n  return (\n    <header className=\"header\">\n      <h1>Todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={value}\n        onChange={({ target: { value } }) => setValue(value)}\n        onKeyUp={e => isEnterKey(e) && onSubmit()}\n      />\n    </header>\n  )\n}\n","import React, { useState, useRef, useEffect, useMemo } from 'react'\nimport { useImmerx } from '@immerx/react'\nimport { isEnterKey } from '../common/isEnterKey'\nimport { isEscapeKey } from '../common/isEscapeKey'\n\nexport function Todo({ id }) {\n  const lens = useMemo(\n    () => ({\n      get: state => state.todos.find(t => t._id === id),\n      set: (state, childState) => {\n        const idx = state.todos.findIndex(t => t._id === id)\n\n        if (childState === null) {\n          state.todos.splice(idx, 1)\n        } else {\n          Object.assign(state.todos[idx], childState)\n        }\n      },\n    }),\n    [id],\n  )\n\n  const [todo, update] = useImmerx(lens)\n  const [editable, setEditable] = useState(false)\n  const [value, setValue] = useState(todo.label)\n  const inputRef = useRef(null)\n\n  const onToggle = () =>\n    update(draft => void (draft.completed = !draft.completed))\n  const onChange = ({ target: { value } }) => setValue(value)\n  const onSubmit = () => update(draft => void (draft.label = value))\n  const onRemove = () => update(draft => null)\n  const onKeyUp = e => {\n    if (isEnterKey(e)) {\n      setEditable(false)\n      onSubmit()\n    } else if (isEscapeKey(e)) {\n      setEditable(false)\n      setValue(todo.label)\n    }\n  }\n\n  useEffect(() => {\n    if (editable) {\n      inputRef.current?.select()\n    }\n  }, [editable])\n\n  return (\n    <li\n      data-id={todo._id}\n      className={[\n        todo.completed ? 'completed' : '',\n        editable ? 'editing' : '',\n      ].join(' ')}\n    >\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          onChange={onToggle}\n          checked={todo.completed}\n        />\n        <label onDoubleClick={() => setEditable(true)}>{todo.label}</label>\n        <button className=\"destroy\" onClick={onRemove} />\n      </div>\n      <input\n        ref={inputRef}\n        className=\"edit\"\n        onBlur={() => setEditable(false)}\n        onChange={onChange}\n        onKeyUp={onKeyUp}\n        value={value}\n      />\n    </li>\n  )\n}\n","export function isEscapeKey({ key, keyCode, which }) {\n  return key === 'Escape' || keyCode === 27 || which === 27\n}\n","export const HASHES = {\n  ALL: '',\n  ACTIVE: 'active',\n  COMPLETED: 'completed',\n}\n","import { useState, useEffect } from 'react'\n\nfunction getHash(w) {\n  return w.location.hash.replace(/^#\\//, '')\n}\n\nconst hash$ = {\n  listeners: new Set(),\n  value: getHash(window),\n  subscribe(listener) {\n    this.listeners.add(listener)\n\n    return { unsubscribe: () => this.listeners.delete(listener) }\n  },\n  next(hash) {\n    for (const listener of this.listeners) listener(hash)\n    this.value = hash\n  },\n}\n\nwindow.addEventListener('hashchange', onHashChange)\nfunction onHashChange(e) {\n  hash$.next(getHash(e.target))\n}\n\nexport function useHash() {\n  const [hash, setHash] = useState(getHash(window))\n\n  useEffect(() => {\n    const sub = hash$.subscribe(setHash)\n    return () => sub.unsubscribe()\n  }, [])\n\n  return hash\n}\n","import React from 'react'\n\nimport { HASHES } from '../constants'\nimport { useHash } from '../hooks/useHash'\n\nexport function ListFooter({ remaining, completed, onClearCompleted }) {\n  const hash = useHash()\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{remaining}</strong>\n        {` item${~(remaining - 2) ? 's' : ''} left`}\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a className={hash === HASHES.ALL ? 'selected' : ''} href=\"#/\">\n            All\n          </a>\n        </li>\n        <li>\n          <a\n            className={hash === HASHES.ACTIVE ? 'selected' : ''}\n            href=\"#/active\"\n          >\n            Active\n          </a>\n        </li>\n        <li>\n          <a\n            className={hash === HASHES.COMPLETED ? 'selected' : ''}\n            href=\"#/completed\"\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n      {!!completed && (\n        <button className=\"clear-completed\" onClick={onClearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { useImmerx } from '@immerx/react'\n\nimport { Todo } from './Todo'\nimport { ListFooter } from './ListFooter'\n\nimport { HASHES } from '../constants'\nimport { useHash } from '../hooks/useHash'\n\nconst filters = {\n  [HASHES.ALL]: t => true,\n  [HASHES.ACTIVE]: t => !t.completed,\n  [HASHES.COMPLETED]: t => t.completed,\n}\n\nexport function TodoList() {\n  const [todos, produce] = useImmerx('todos')\n  const hash = useHash()\n\n  const visibleTodos = useMemo(() => todos.filter(filters[hash]), [hash, todos])\n  const remaining = useMemo(() => visibleTodos.filter(t => !t.completed), [\n    visibleTodos,\n  ])\n  const completed = useMemo(() => visibleTodos.filter(t => t.completed), [\n    visibleTodos,\n  ])\n\n  function onToggleAll() {\n    produce(draft =>\n      draft.forEach(todo => (todo.completed = !!remaining.length)),\n    )\n  }\n\n  function onClearCompleted() {\n    // // // state replace\n    // produce(draft => draft.filter(t => !t.completed))\n    // // individual updates\n    // let count = 0\n    // todos.forEach((todo, i) => {\n    //   todo.completed && produce(draft => void draft.splice(i - count++, 1))\n    // })\n    // reverse splice loop\n    produce(draft => {\n      let i = draft.length - 1\n      while (i >= 0) {\n        draft[i].completed && draft.splice(i, 1)\n        i -= 1\n      }\n      // TODO: write an issue about replace/remove patches here\n    })\n  }\n\n  return todos.length ? (\n    <>\n      <main className=\"main\">\n        <input\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          type=\"checkbox\"\n          onChange={onToggleAll}\n          checked={!remaining.length}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n        <ul className=\"todo-list\">\n          {visibleTodos.map(todo => (\n            <Todo {...{ id: todo._id }} key={todo._id} />\n          ))}\n        </ul>\n      </main>\n      <ListFooter\n        completed={completed.length}\n        remaining={remaining.length}\n        onClearCompleted={onClearCompleted}\n      />\n    </>\n  ) : null\n}\n","import React from 'react'\n\nexport function Footer() {\n  return (\n    <footer className=\"info\">\n      <p>Double-click to edit a todo</p>\n      <p>\n        Created by <a href=\"https://github.com/monojack\">Ionut Achim</a>\n      </p>\n      <p>\n        Part of <a href=\"http://todomvc.com\">TodoMVC</a>\n      </p>\n    </footer>\n  )\n}\n","import React from 'react'\nimport 'todomvc-common/base.css'\nimport 'todomvc-app-css/index.css'\n\nimport { Header } from './Header'\nimport { TodoList } from './TodoList'\nimport { Footer } from './Footer'\n\nexport function App() {\n  return (\n    <div id=\"app\">\n      <section className=\"todoapp\" key={'app-section'}>\n        <Header />\n        <TodoList />\n      </section>\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { create } from '@immerx/react'\nimport { createDevToolsMiddleware } from '@immerx/devtools'\n\nimport { App } from './components/App'\n\nimport './styles.css'\n\nconst devToolsMiddleware = createDevToolsMiddleware({\n  inline: document.getElementById('devtools'),\n})\ncreate(\n  {\n    todos: [\n      {\n        _id: '4ecca858-67f8-491e-94cc-48b262061819',\n        label: 'Taste JavaScript',\n        completed: true,\n      },\n      {\n        _id: '3c4a086e-2151-4b54-acb2-13044ea553c1',\n        label: 'Buy a unicorn',\n        completed: false,\n      },\n    ],\n  },\n  [devToolsMiddleware],\n)\n\nrender(<App />, document.getElementById('root'))\n"],"sourceRoot":""}